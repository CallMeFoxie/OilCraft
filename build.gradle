def VersionMajor = 0
def VersionMinor = 1
def VersionRev = 0


buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
}

apply plugin: 'forge'


def VersionBuild = 0
if (System.getenv("BUILD_NUMBER") != null)
    VersionBuild = System.getenv("BUILD_NUMBER")

version = "1.7.10-${VersionMajor}.${VersionMinor}.${VersionRev}-${VersionBuild}"
group = "cz.ondraster.oilcraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "OilCraft"

minecraft {
    version = "1.7.10-10.13.1.1225"
    runDir = "eclipse/assets"
}

dependencies {
    //compile "codechicken.NotEnoughItems:1.7.10-1.0.3.56"
    //compile "mcp.mobius.waila:Waila:1.5.5_1.7.10"
    compile "com.mod-buildcraft:buildcraft:6.0.18:dev"
    compile 'net.industrial-craft:industrialcraft-2:2.2.648-experimental:api'
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
